version: 2.1

references:
  filter_ignore_wip_branches:
    filters:
      branches:
        ignore:
          - /[a-z]{2}_wip.*/ # wip branches with initials prefix, e.g. mw_wip
          - /wip\/.*/ # wip branches with wip/ prefix, e.g. wip/foo
          - /poc\/.*/ # poc branches with poc/ prefix, e.g. poc/bar
          - /automation\/.*/ # automation branches with automation/ prefix. e.g. automation/foo

  filter_only_integration_branches: &filter_only_integration_branches
    filters:
      branches:
        only:
          - develop # git flow develop branch
          - /testfix\/.*/ # testfix branches with testfix/ prefix. e.g. testfix/foo

  filter_only_testable_branches: &filter_only_testable_branches
    filters:
      branches:
        only:
          - main # git flow main branch
          - develop # git flow develop branch
          - /hotfix\/.*/ # git flow hotfix branches
          - /release\/.*/ # git flow release branches

jobs:
  ### build and install ###
  build_install: &build_install
    docker:
      - image: cimg/node:18.12.1-browsers
    resource_class: small
    working_directory: ~/klassijs

    steps:
      - run:
          name: Avoid hosts unknown for github
          command: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

      - run:
          name: Checkout the projectName framework repo
          command: git clone git@github.com:klassijs/projectName.git

      - run:
          name: Check out the working branch
          path: ~/klassijs/projectName
          command: git checkout ${CIRCLE_BRANCH}

      - run:
          name: Generate dependency cache key
          command: cat ~/klassijs/projectName/yarn.lock > CACHE_KEY

      - restore_cache:
          key: klassijs-yarn-cache-v0-{{ checksum "CACHE_KEY" }}

      - run:
          name: Install the projectName framework dependencies
          path: ~/klassijs/projectName
          command: |            
            git config --global url."git@github.com:".insteadOf "https://github.com/" 
            yarn install

      - save_cache:
          paths:
            - ~/.cache/yarn
          key: klassijs-yarn-cache-v0-{{ checksum "CACHE_KEY" }}

      - persist_to_workspace:
          root: ./
          paths:
            - ./projectName

    build_and_install:
      <<: *build_install


    ###   Integration test base configuration   ###
    integration_test_run: &integration_test_run
      docker:
        - image: cimg/node:18.12.1-browsers
      parallelism: 2

      steps:
        - attach_workspace:
            at: ./

        - run:
            name: Setting up tmp Dir for split files
            command: mkdir ./tmp

        - run:
            name: Run integration tests
            path: ./projectName
            command: yarn ch14

        - store_artifacts:
            path: ./projectName/artifacts/visual-regression/original/

        - store_test_results:
            path: ./projectName/reports

    dev_integration_test_chrome:
      <<: *integration_test_run
      environment: { BROWSER: 'chrome', STAGE: 'dev' }

### Workflow ###
workflows:
  version: 2

  build_and_test:
    jobs:
      - build_and_install:
          context: klassijs-framework
          <<: *filter_only_testable_branches

      - dev_integration_test_chrome:
          context: klassijs-framework
          requires:
            - build_and_install
          <<: *filter_only_integration_branches
